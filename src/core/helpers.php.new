<?php
/**
 * Helpers principales: autenticación, roles, permisos, conexión DB, emails, notificaciones
 */

// Prevenir cualquier salida antes de session_start
if (ob_get_level()) ob_end_clean();
ob_start();

// Iniciar sesión si no está activa y no se han enviado headers
if (session_status() === PHP_SESSION_NONE && !headers_sent()) {
    session_start();
}

/**
 * Lee y parsea el archivo .env
 */
function loadEnv($path) {
    if (!file_exists($path)) {
        throw new Exception("El archivo .env no existe en: $path");
    }

    try {
        // Intentar primero con parse_ini_file
        $env = parse_ini_file($path);
        if ($env !== false) {
            return $env;
        }

        // Si falla, leer el contenido y limpiarlo
        $content = file_get_contents($path);
        if ($content === false) {
            throw new Exception("No se pudo leer el archivo .env");
        }

        // Limpiar el contenido
        $content = preg_replace('/\r\n|\r/', "\n", $content); // Normalizar finales de línea
        $content = preg_replace('/[^\x20-\x7E\n]/', '', $content); // Remover caracteres no ASCII

        $env = [];
        $lines = explode("\n", $content);
        
        foreach ($lines as $line) {
            $line = trim($line);
            
            // Saltar líneas vacías y comentarios
            if (empty($line) || $line[0] === '#') {
                continue;
            }
            
            // Separar clave y valor
            $parts = explode('=', $line, 2);
            if (count($parts) !== 2) {
                continue;
            }
            
            $key = trim($parts[0]);
            $value = trim($parts[1]);
            
            // Remover comillas si existen
            if (preg_match('/^(["\']).*\1$/', $value)) {
                $value = substr($value, 1, -1);
            }
            
            $env[$key] = $value;
        }
        
        return $env;
    } catch (Exception $e) {
        error_log("Error leyendo .env: " . $e->getMessage());
        throw new Exception("Error procesando el archivo .env");
    }
}

/**
 * Obtiene una conexión a la base de datos
 */
function getDB() {
    static $db = null;
    
    if ($db === null) {
        // Detectar entorno
        $isProduction = (isset($_SERVER['HTTP_HOST']) && strpos($_SERVER['HTTP_HOST'], 'indiceapp.com') !== false);
        
        // Ruta del archivo .env según el entorno
        $envPath = $isProduction 
            ? '/home1/corazon/app.indiceapp.com/.env'
            : __DIR__ . '/../../.env';
        
        // Cargar variables de entorno
        $env = loadEnv($envPath);
        
        // Mapear nombres de variables
        $dbConfig = [
            'host' => $env['DB_HOST'] ?? null,
            'name' => $env['DB_DATABASE'] ?? null,
            'user' => $env['DB_USERNAME'] ?? null,
            'pass' => $env['DB_PASSWORD'] ?? null,
            'port' => $env['DB_PORT'] ?? 3306
        ];
        
        // Verificar configuración
        foreach (['host', 'name', 'user', 'pass'] as $key) {
            if (empty($dbConfig[$key])) {
                throw new Exception("Falta la configuración DB_{$key} en el archivo .env");
            }
        }
        
        try {
            // Configurar opciones de PDO
            $options = [
                PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,
                PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC,
                PDO::ATTR_EMULATE_PREPARES => false,
                PDO::MYSQL_ATTR_INIT_COMMAND => "SET NAMES utf8mb4"
            ];
            
            // Construir DSN con puerto explícito
            $dsn = sprintf(
                "mysql:host=%s;port=%d;dbname=%s;charset=utf8mb4",
                $dbConfig['host'],
                $dbConfig['port'],
                $dbConfig['name']
            );
            
            // Crear conexión
            $db = new PDO($dsn, $dbConfig['user'], $dbConfig['pass'], $options);
            
            // Verificar conexión
            $db->query("SELECT 1");
            
        } catch (PDOException $e) {
            error_log("Error de conexión a BD: " . $e->getMessage());
            throw new Exception(
                "Error de conexión a la base de datos. " .
                "Verifica las credenciales en el archivo .env"
            );
        }
    }
    
    return $db;
}

// ... resto de funciones helper ...
